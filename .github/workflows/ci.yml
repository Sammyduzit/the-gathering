name: The Gathering CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      CI: true
      SECRET_KEY: test-secret-key-for-ci
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      APP_NAME: The Gathering Test
      DEBUG: false
      DEEPL_API_KEY: test-deepl-key-for-ci

    steps:
    - name: "📥 Checkout Repository"
      uses: actions/checkout@v4

    - name: "🐍 Setup Python 3.13"
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: "📦 Install Dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: "🦀 Ruff Linting Check"
      run: |
        ruff check app/ tests/ main.py

    - name: "🦀 Ruff Formatting Check"
      run: |
        ruff format --check app/ tests/ main.py

    - name: "🧪 Run Unit Tests"
      run: |
        pytest tests/unit/ -v --tb=short

    - name: "🔄 Run E2E Tests"
      run: |
        pytest tests/e2e/ -v --tb=short

    - name: "📊 Generate Coverage Report"
      run: |
        pytest --cov=app --cov-report=term-missing --cov-report=xml
        echo "✅ Test coverage completed"

    - name: "📊 SonarCloud Scan"
      uses: SonarSource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
      runs-on: ubuntu-latest
      needs: test

      steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "🐳 Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "🔐 Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: "🏗️ Build and Push Docker Image"
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/the-gathering:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/the-gathering:${{ github.sha }}